<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sduwh.match.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sduwh.match.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="join_match_ids" jdbcType="VARCHAR" property="joinMatchIds" />
    <result column="academy_id" jdbcType="INTEGER" property="academyId" />
    <result column="specialty_id" jdbcType="INTEGER" property="specialtyId" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <association property="role" column="role_id" select="com.sduwh.match.dao.RoleMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, status, role_id, join_match_ids, academy_id, specialty_id, 
    last_time, phone, email, name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sduwh.match.model.entity.User">
    insert into user (id, username, password, 
      status, role_id, join_match_ids, 
      academy_id, specialty_id, last_time, 
      phone, email)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{joinMatchIds,jdbcType=VARCHAR},
      #{academyId,jdbcType=INTEGER}, #{specialtyId,jdbcType=INTEGER}, #{lastTime,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sduwh.match.model.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="joinMatchIds != null">
        join_match_ids,
      </if>
      <if test="academyId != null">
        academy_id,
      </if>
      <if test="specialtyId != null">
        specialty_id,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="joinMatchIds != null">
        #{joinMatchIds,jdbcType=VARCHAR},
      </if>
      <if test="academyId != null">
        #{academyId,jdbcType=INTEGER},
      </if>
      <if test="specialtyId != null">
        #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sduwh.match.model.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="joinMatchIds != null">
        join_match_ids = #{joinMatchIds,jdbcType=VARCHAR},
      </if>
      <if test="academyId != null">
        academy_id = #{academyId,jdbcType=INTEGER},
      </if>
      <if test="specialtyId != null">
        specialty_id = #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sduwh.match.model.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      join_match_ids = #{joinMatchIds,jdbcType=VARCHAR},
      academy_id = #{academyId,jdbcType=INTEGER},
      specialty_id = #{specialtyId,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>